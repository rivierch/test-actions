# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Start Release

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      release_name:
        description: 'Name of the Release year_week# example : 2019.50'
        required: true
      origin_branch:
        description: 'Origin branch name, can be develop or master'
        required: true
        default: 'develop'
      aws_region:
        description: 'AWS Region'
        required: true
        default: 'eu-west-2'


jobs:
  createBranch:
    runs-on: ubuntu-latest
    outputs:
      branch_name: ${{ steps.step_git.outputs.branch_name }}
    steps:

    # Input Parameters
    - run: |
        echo "release name: ${{github.event.inputs.release_name}}"
        echo "origin_branch: ${{github.event.inputs.origin_branch}}"

    # Checkout repository under $GITHUB_WORKSPACE
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        ref: ${{github.event.inputs.origin_branch}}

    # Create and Push new branch
    - name: Create release branch with the name release/${{github.event.inputs.release_name}}
      id: step_git
      run: |
        git config --global user.email "${GITHUB_ACTOR}@moodys.com"
        git config --global user.name "${GITHUB_ACTOR}"
        branche_name="release/${{github.event.inputs.release_name}}"
        echo "::set-output name=branch_name::$branche_name"
        branchexist=$(git branch -a | grep $branche_name | head -1)
        if [[ -z $branchexist ]] ; then echo create branch $branche_name ; else echo "branch already exist" ; exit 1 ; fi
        git checkout -b $branche_name
        # update version file
        cd rhub_core/rhub_core/version
        echo \# file generated by start release github action | tee branch_version.py
        echo __version__=\"${{github.event.inputs.release_name}}.RC1\" | tee -a branch_version.py
        cd ../../..
        git add .
        git commit -m "Create release branch $branche_name"
        # create tag for the release
        git tag -a $branche_name.RC1 -m "new release ${{github.event.inputs.release_name}}.RC1"
        git push --follow-tags origin $branche_name

  BuildDeliverable:
    needs: createBranch
    runs-on: ubuntu-latest

    steps:
    - name: checkout branch ${{needs.createBranch.outputs.branch_name}}
      uses: actions/checkout@v2
      with:
        ref: ${{ needs.createBranch.outputs.branch_name }}
    - name: Create version Number
      run: |
        cd rhub_core/rhub_core/version
        if [ -z ${GITHUB_HEAD_REF} ]; then echo __version__=\"${GITHUB_REF##*/}-`date +"%Y-%m-%d_%H:%M:%S"`\"; else echo __version__=\"${GITHUB_HEAD_REF##*/}-`date +"%Y-%m-%d_%H:%M:%S"`\"; fi | tee current_version.py
        echo __commit_id__=\"${GITHUB_SHA}\" | tee -a current_version.py
